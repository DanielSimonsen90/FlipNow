@use '../../../../styles/mixins' as mixins;
@use './components/Card/Card.scss' as card;
@use './components/CardContainer/CardContainer.scss' as cardContainer;

$game-size: mixins.calculate-game-size(
  card.$card-width,
  cardContainer.$gap,
  5
);

#active-game {
  display: grid;
  place-items: center;
  gap: 1ch;

  > h1 {
    margin-top: 1rem;
    margin-bottom: 1rem;
  }
}

.game-container {
  // PlayState == PLAYING
  display: grid;
  grid-template-columns: #{$game-size} auto;
  place-items: center;
  min-height: min(20vh, 75vw);
  max-width: 80vw;
  margin: 1em 0;

  // PlayState == IDLE
  &:has(.start-game--button) {
    display: flex;
    flex-direction: column-reverse;
    gap: 1em;
  }

  // PlayState == ENDED
  &:has(.game-ended) {
    grid-template-areas: "end end" "start leaderboard";

    > *:first-child {
      grid-area: end;
    }
  }
}